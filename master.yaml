AWSTemplateFormatVersion: "2010-09-09"
Description: Master stack which creates all required nested stacks

Parameters:
  templatePath: 
    Type: String 
    Default: doggy-template-build-terminal
  vpcCidrBlock: 
    Type: String 
    Default: 10.98.0.0/16 # 10.98.0.1 => 10.98.255.254
  publicSubnet0Cidr: 
    Type: String 
    Default: 10.98.0.0/21 # 10.98.0.1 => 10.98.7.254
  protectedSubnet0Cidr: 
    Type: String 
    Default: 10.98.8.0/21 # 10.98.8.1 => 10.98.15.254
  privateSubnet0Cidr: 
    Type: String 
    Default: 10.98.16.0/20 # 10.98.16.1 => 10.98.31.254
  publicSubnet1Cidr: 
    Type: String 
    Default: 10.98.64.0/21 # 10.98.64.1 => 10.98.71.254
  privateSubnet1Cidr: 
    Type: String 
    Default: 10.98.80.0/20 # 10.98.80.1 => 10.98.95.254
  protectedSubnet1Cidr: 
    Type: String
    Default: 10.98.72.0/21 # 10.98.72.1 => 10.98.79.254

#Tag parameters 
  owner: 
    Type: String
    Default: idanzigm
  ownerEmail: 
    Type: String
    Default: idanzigm@gmail.com
  environment: 
    Type: String
    AllowedValues: 
      - production
      - development
    Default: production
  project: 
    Type: String
    Default: DoggyApp

Resources:
  vpcStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${templatePath}/vpc/vpc.yaml"
      Parameters:
        vpcCidrBlock: !Ref vpcCidrBlock
        publicSubnet0Cidr: !Ref publicSubnet0Cidr
        publicSubnet1Cidr: !Ref publicSubnet1Cidr
        privateSubnet0Cidr: !Ref privateSubnet0Cidr
        privateSubnet1Cidr: !Ref privateSubnet1Cidr
        protectedSubnet0Cidr: !Ref protectedSubnet0Cidr
        protectedSubnet1Cidr: !Ref protectedSubnet1Cidr
        #Tag parameters 
        owner: !Ref owner
        ownerEmail: !Ref ownerEmail
        environment: !Ref environment
        project: !Ref project
      Tags:
        - Key: Name
          Value: VpcStack

  routeTablesStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${templatePath}/vpc/routeTables.yaml"
      Parameters:
        vpc0id: 
          Fn::GetAtt: 
          - vpcStack
          - Outputs.vpc0id
        igw0id: 
          Fn::GetAtt: 
          - vpcStack
          - Outputs.igw0id
        publicSubnet0id: 
          Fn::GetAtt: 
          - vpcStack
          - Outputs.publicSubnet0id
        publicSubnet1id: 
          Fn::GetAtt: 
          - vpcStack
          - Outputs.publicSubnet1id
        privateSubnet0id: 
          Fn::GetAtt: 
          - vpcStack
          - Outputs.privateSubnet0id
        privateSubnet1id: 
          Fn::GetAtt: 
          - vpcStack
          - Outputs.privateSubnet1id
        protectedSubnet0id: 
          Fn::GetAtt: 
          - vpcStack
          - Outputs.protectedSubnet0id
        protectedSubnet1id: 
          Fn::GetAtt: 
          - vpcStack
          - Outputs.protectedSubnet1id
        ngw0id: 
          Fn::GetAtt: 
          - vpcStack
          - Outputs.ngw0id
        ngw1id: 
          Fn::GetAtt: 
          - vpcStack
          - Outputs.ngw1id
        #Tag parameters 
        owner: !Ref owner
        ownerEmail: !Ref ownerEmail
        environment: !Ref environment
        project: !Ref project
      Tags:
        - Key: Name
          Value: RouteTablesStack

  rolesStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${templatePath}/security/roles.yaml"
      Parameters:
        #Tag parameters 
        owner: !Ref owner
        ownerEmail: !Ref ownerEmail
        environment: !Ref environment
        project: !Ref project
      Tags:
        - Key: Name
          Value: RolesStack


  eksStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${templatePath}/eks/eks.yaml"
      Parameters:
        privateSubnet0id: 
          Fn::GetAtt: 
          - vpcStack
          - Outputs.privateSubnet0id
        privateSubnet1id: 
          Fn::GetAtt: 
          - vpcStack
          - Outputs.privateSubnet1id
        clusterSGid: 
          Fn::GetAtt: 
          - sgStack
          - Outputs.clusterSGid
        clusterRoleArn: 
          Fn::GetAtt: 
          - Outputs.clusterRoleArn
        #Tag parameters 
        owner: !Ref owner
        ownerEmail: !Ref ownerEmail
        environment: !Ref environment
        project: !Ref project
      Tags:
        - Key: Name
          Value: EksStack

  sgStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${templatePath}/security/sg.yaml"
      Parameters:
        vpc0id: 
          Fn::GetAtt: 
          - vpcStack
          - Outputs.vpc0id
        #Tag parameters 
        owner: !Ref owner
        ownerEmail: !Ref ownerEmail
        environment: !Ref environment
        project: !Ref project
      Tags:
        - Key: Name
          Value: SecurityGroupStack

  keyStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${templatePath}/security/kms.yaml"
      Parameters:
        mgmtEc2Arn: Output.mgmtEc2Arn
        #Tag parameters 
        owner: !Ref owner
        ownerEmail: !Ref ownerEmail
        environment: !Ref environment
        project: !Ref project
      Tags:
        - Key: Name
          Value: KeyStack


  mgmtStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${templatePath}/eks/ec2.yaml"
      Parameters:
        managerSGid:
          Fn::GetAtt: 
          - sgStack
          - Outputs.managerSGid
        privateSubnet0id:
          Fn::GetAtt: 
          - vpcStack
          - Outputs.privateSubnet0id
        ec2KeyId:
          Fn::GetAtt:
          - keyStack
          - Outputs.ec2KeyId
        #Tag parameters
        owner: !Ref owner
        ownerEmail: !Ref ownerEmail
        environment: !Ref environment
        project: !Ref project
      Tags:
        - Key: Name
          Value: MgmtStack